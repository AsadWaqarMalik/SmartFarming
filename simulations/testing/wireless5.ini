[General]
network =WirelessNetwork5
**.numb = 10
**.numbUsers = 10


**.scalar-recording = true
**.vector-recording = true


tkenv-plugin-path = ../../../etc/plugins

**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 1000m
**.constraintAreaMaxY = 1000m
**.constraintAreaMaxZ = 0m

#**.user[*].mobility..initFromDisplayString = false

#**.mobility.initFromDisplayString = false
**.user[0..5].mobilityType = "CircleMobility"
**.user[0..5].mobility.cx = 300m
**.user[0..5].mobility.cy = 300m
**.user[0..5].mobility.r = 250m
**.user[0..5].mobility.speed = 40mps
**.user[0].mobility.startAngle = 30deg
**.user[1].mobility.startAngle = 60deg
**.user[2].mobility.startAngle = 90deg
**.user[3].mobility.startAngle = 120deg
**.user[4].mobility.startAngle = 150deg
**.user[5].mobility.startAngle = 180deg


**.user2.mobilityType = "CircleMobility"
**.user2.mobility.cx = 300m
**.user2.mobility.cy = 300m
**.user2.mobility.r = 250m
**.user2.mobility.speed = 40mps
**.user2.mobility.startAngle = 180deg


# mobility
**.mobility.initFromDisplayString = true
**.user[*].mobilityType = "LinearMobility"
**.user[*].mobility.speed = 20mps
**.user[*].mobility.angle = 0
**.user[*].mobility.acceleration = 0
**.user[*].mobility.updateInterval = 100ms

**.radio.transmitter.power = 3.5mW

#**.user[*].wlan[*].bitrate = 3Mbps
# wireless configuration
**.wlan*.opMode = "g"
#**.wlan*.bitrate = 2Mbps

# nic settings 
**.wlan.mac.EDCA = false 
**.wlan.mgmt.frameCapacity = 10 
**.wlan.mac.maxQueueSize = 14 
**.wlan.mac.rtsThresholdBytes = 3000B 
**.wlan.mac.bitrate = 54Mbps 
**.wlan.mac.basicBitrate = 6Mbps  # 24Mbps 
**.wlan.mac.retryLimit = 7 
**.wlan.mac.cwMinData = 31 
**.wlan.mac.cwMinBroadcast = 31


# Queues
**.eth[*].queueType = "DropTailQueue"
**.eth[*].queue.dataQueue.frameCapacity = 40
**.user[*].routingTable.forwarding=true
# mqtt apps
**.user[*].numUdpApps = 1
**.user[*].udpApp[*].typename =  "mqttApp2"
**.user[*].udpApp[*].messageLength = 1024B
**.user[*].udpApp[*].localAddress = ""
**.user[*].udpApp[*].localPort = 1000
**.user[*].udpApp[*].destAddresses = "BaseBroker"
**.user[*].udpApp[*].destPort = 1001
**.user[*].udpApp[*].sendInterval = 1.5s
**.user[*].udpApp[*].startTime = 0.0s
**.user[*].udpApp[*].stopTime = 300s
**.user[*].udpApp[*].publishToTopics = "test topic 1"
**.user[*].udpApp[*].publish = true
**.user[*].udpApp[*].taskSize = 1500


# mqtt apps
**.usr[*].numUdpApps = 1
**.usr[*].udpApp[*].typename =  "mqttApp2"
**.usr[*].udpApp[*].messageLength = 1024B
**.usr[*].udpApp[*].localAddress = ""
**.usr[*].udpApp[*].localPort = 1000
**.usr[*].udpApp[*].destAddresses = "BaseBroker"
**.usr[*].udpApp[*].destPort = 1001
**.usr[*].udpApp[*].sendInterval = 7s
**.usr[*].udpApp[*].startTime = 0.0s
**.usr[*].udpApp[*].stopTime = 1000s
**.usr[*].udpApp[*].publishToTopics = "test topic 1"
**.usr[*].udpApp[*].publish = true


# basebroker apps 
**.BaseBroker.numUdpApps = 1
**.BaseBroker.udpApp[*].typename =  "BrokerBaseApp3"
**.BaseBroker.udpApp[*].localPort = 1001
**.BaseBroker.udpApp[*].MIPS = 0

# computeBroker apps 
**.ComputeBroker*.numUdpApps = 1
**.ComputeBroker*.udpApp[*].typename =  "ComputeBrokerApp3"
**.ComputeBroker*.udpApp[*].localPort = 1001
**.ComputeBroker1.udpApp[*].MIPS = 1000
**.ComputeBroker2.udpApp[*].MIPS = 2000
**.ComputeBroker3.udpApp[*].MIPS = 3000
**.ComputeBroker4.udpApp[*].MIPS = 4000
**.ComputeBroker*.udpApp[*].destAddresses = "BaseBroker"
**.ComputeBroker*.udpApp[*].destPort = 1001
**.ComputeBroker*.udpApp[*].messageLength = 100 Byte
**.ComputeBroker*.udpApp[*].sendInterval = 1s
**.ComputeBroker*.udpApp[*].startTime = 0.0s

#*.configurator.config = xml("<config> \
#                                <interface hosts='user' names='eth0' address='10.0.0.100'/> \
#                                <interface hosts='BaseBroker' names='eth0' address='10.0.0.50'/> \
#                                <interface hosts='**' address='10.x.x.x' netmask='255.x.x.x'/> \
#                             </config>")



# graphics
**.viewAngle = "isometric"
**.leaveMovementTrail = false
**.leaveIntersectionTrail = false
**.leaveCommunicationTrail = false
**.leaveCommunicationHeat = false
**.displayCommunication = false
**.displayCommunicationRange = true
**.displayInterferenceRange = false
**.drawCommunication2D = true





# visualizer
*.visualizer.energyStorageVisualizer.displayEnergyStorages = true

# status
*.user[*].hasStatus = true

# power
*.user[*].energyStorage.typename = "SimpleEpEnergyStorage"
*.user[*].wlan[*].radio.energyConsumer.typename = "StateBasedEpEnergyConsumer"
*.user[*].energyManagement.typename = "SimpleEpEnergyManagement"
*.user[*].energyStorage.nominalCapacity = 0.05J
*.user[*].energyManagement.nodeShutdownCapacity = 0.1 * energyStorage.nominalCapacity
*.user[*].energyManagement.nodeStartCapacity = 0.5 * energyStorage.nominalCapacity
*.user[*].energyStorage.initialCapacity = uniform(0.1 * energyStorage.nominalCapacity, energyStorage.nominalCapacity)
*.user[*].energyGenerator.typename = "AlternatingEpEnergyGenerator"
*.user[*].energyGenerator.powerGeneration = 4mW
*.user[*].energyGenerator.sleepInterval = exponential(25s)
*.user[*].energyGenerator.generationInterval = exponential(25s)


